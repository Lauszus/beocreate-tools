#!/bin/sh
sudo apt-get -y install build-essential portaudio19-dev

sudo mkdir -p /opt/hifiberry/bin

# Install Rust
curl https://sh.rustup.rs -sSf | sh -s -- -y

git clone https://github.com/Spotifyd/spotifyd
cd spotifyd
echo
echo "Compiling Spotifyd - note that this can take a very long time when running on a Raspberry Pi !"
echo

cargo build --release
sudo cp target/release/spotifyd /opt/hifiberry/bin
cd ..
rm -rf spotifyd

cd /tmp

cat <<EOT >spotify.service
[Unit]
Description=Spotify Connect
After=network-online.target
After=sound.target

[Service]
Type=idle
User=pi
ExecStart=/opt/hifiberry/bin/spotifyd -c /etc/spotifyd.conf --no-daemon
Restart=always
RestartSec=10
StartLimitInterval=30
StartLimitBurst=20

[Install]
WantedBy=multi-user.target

EOT

cat <<EOT >spotifyd.conf
[global]
#username = USER
#password = PASS
backend = alsa
mixer = Master
volume-control = alsa
device_name = Beocreate
bitrate = 320
onevent = /opt/hifiberry/bin/spotifyd-notification
EOT

cat <<EOT >notify
#!/bin/bash

if [ "$PLAYER_EVENT"  == "stop" ]; then
 /opt/hifiberry/bin/write-status STOP SPOTIFY
 exit 
fi

if [ "$PLAYER_EVENT"  == "start" ]; then
 /opt/hifiberry/bin/write-status START SPOTIFY
fi

if [ "$TRACK_ID" != "" ]; then
 /opt/hifiberry/bin/write-status TRACK SPOTIFY $TRACK_ID
fi
EOT

if [ ! -f /etc/spotifyd.conf ]; then
 sudo cp spotifyd.conf /etc/spotifyd.conf
fi

sudo cp spotify.service /lib/systemd/system/spotify.service
sudo cp notify /opt/hifiberry/bin/spotifyd-notification
sudo chmod ug+rx /opt/hifiberry/bin/spotifyd-notification
sudo systemctl daemon-reload
sudo systemctl enable spotify.service
sudo systemctl restart spotify.service
